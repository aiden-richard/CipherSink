// <auto-generated />
using CipherSink.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CipherSink.Migrations
{
    [DbContext(typeof(CipherSinkContext))]
    partial class CipherSinkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CipherSink.Models.Database.Entities.LocalPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("EncryptedPrivateKeyBytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PublicKeyBytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("TotalHits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLosses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalMisses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalSunkShips")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalWins")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LocalPlayers");
                });

            modelBuilder.Entity("CipherSink.Models.Database.Entities.PastGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameLengthSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RemotePlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnsTaken")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PastGames");
                });

            modelBuilder.Entity("CipherSink.Models.Database.Entities.RemotePlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFriend")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PublicKeyBytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RemotePlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
